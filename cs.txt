0x1000: pushq %rbp
    bytes:       [85]
0x1001: movq %rsp, %rbp
    bytes:       [72, 137, 229]
0x1004: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1008: movq %rsi, (%rsp)
    bytes:       [72, 137, 52, 36]
0x100c: movq %rdi, 8(%rsp)
    bytes:       [72, 137, 124, 36, 8]
0x1011: movq %r12, 0x10(%rsp)
    bytes:       [76, 137, 100, 36, 16]
0x1016: movzbq (%rcx), %r10
    bytes:       [76, 15, 182, 17]
0x101a: xorq %rsi, %rsi
    bytes:       [72, 49, 246]
0x101d: testb %r10b, %r10b
    bytes:       [69, 132, 210]
0x1020: jne 0x102e
    bytes:       [15, 133, 8, 0, 0, 0]
0x1026: movq %rcx, %rdi
    bytes:       [72, 137, 207]
0x1029: jmp 0x126d
    bytes:       [233, 63, 2, 0, 0]
0x102e: xorq %rsi, %rsi
    bytes:       [72, 49, 246]
0x1031: movq %rcx, %rdi
    bytes:       [72, 137, 207]
0x1034: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x103a: movabsq $0x7ff709971000, %rax
    bytes:       [72, 184, 0, 16, 151, 9, 247, 127, 0, 0]
0x1044: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1048: callq *%rax
    bytes:       [255, 208]
0x104a: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x104e: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1051: jne 0x1857
    bytes:       [15, 133, 0, 8, 0, 0]
0x1057: movq %rdi, %rcx
    bytes:       [72, 137, 249]
0x105a: addq %rsi, %rcx
    bytes:       [72, 1, 241]
0x105d: movq %rcx, %r12
    bytes:       [73, 137, 204]
0x1060: movzbq (%rdi, %rsi), %r10
    bytes:       [76, 15, 182, 84, 55, 0]
0x1066: testb %r10b, %r10b
    bytes:       [69, 132, 210]
0x1069: je 0x10a0
    bytes:       [15, 132, 49, 0, 0, 0]
0x106f: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x1075: movabsq $0x7ff709971000, %rax
    bytes:       [72, 184, 0, 16, 151, 9, 247, 127, 0, 0]
0x107f: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1083: callq *%rax
    bytes:       [255, 208]
0x1085: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x1089: testq %rax, %rax
    bytes:       [72, 133, 192]
0x108c: jne 0x1857
    bytes:       [15, 133, 197, 7, 0, 0]
0x1092: movzbq (%rdi, %rsi), %rax
    bytes:       [72, 15, 182, 68, 55, 0]
0x1098: testb %al, %al
    bytes:       [132, 192]
0x109a: jne 0x106f
    bytes:       [15, 133, 207, 255, 255, 255]
0x10a0: movabsq $0x7ff7099711c0, %rdx
    bytes:       [72, 186, 192, 17, 151, 9, 247, 127, 0, 0]
0x10aa: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x10ae: movq %r12, %rcx
    bytes:       [76, 137, 225]
0x10b1: callq *%rdx
    bytes:       [255, 210]
0x10b3: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x10b7: testq %rax, %rax
    bytes:       [72, 133, 192]
0x10ba: jne 0x1857
    bytes:       [15, 133, 151, 7, 0, 0]
0x10c0: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x10c6: movabsq $0x7ff709971000, %rax
    bytes:       [72, 184, 0, 16, 151, 9, 247, 127, 0, 0]
0x10d0: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x10d4: callq *%rax
    bytes:       [255, 208]
0x10d6: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x10da: testq %rax, %rax
    bytes:       [72, 133, 192]
0x10dd: jne 0x1857
    bytes:       [15, 133, 116, 7, 0, 0]
0x10e3: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x10e9: movabsq $0x7ff709971000, %r9
    bytes:       [73, 185, 0, 16, 151, 9, 247, 127, 0, 0]
0x10f3: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x10f7: callq *%r9
    bytes:       [65, 255, 209]
0x10fa: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x10fe: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1101: jne 0x1857
    bytes:       [15, 133, 80, 7, 0, 0]
0x1107: movabsq $0x7ff7099711c0, %rdx
    bytes:       [72, 186, 192, 17, 151, 9, 247, 127, 0, 0]
0x1111: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1115: movq %r12, %rcx
    bytes:       [76, 137, 225]
0x1118: callq *%rdx
    bytes:       [255, 210]
0x111a: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x111e: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1121: jne 0x1857
    bytes:       [15, 133, 48, 7, 0, 0]
0x1127: movabsq $0x7ff7099711c0, %rax
    bytes:       [72, 184, 192, 17, 151, 9, 247, 127, 0, 0]
0x1131: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1135: movq %r12, %rcx
    bytes:       [76, 137, 225]
0x1138: callq *%rax
    bytes:       [255, 208]
0x113a: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x113e: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1141: jne 0x1857
    bytes:       [15, 133, 16, 7, 0, 0]
0x1147: movabsq $0x7ff7099711c0, %r9
    bytes:       [73, 185, 192, 17, 151, 9, 247, 127, 0, 0]
0x1151: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1155: movq %r12, %rcx
    bytes:       [76, 137, 225]
0x1158: callq *%r9
    bytes:       [65, 255, 209]
0x115b: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x115f: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1162: jne 0x1857
    bytes:       [15, 133, 239, 6, 0, 0]
0x1168: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x116e: addl $1, %ecx
    bytes:       [131, 193, 1]
0x1171: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1175: movabsq $0x7ff7099711c0, %rdx
    bytes:       [72, 186, 192, 17, 151, 9, 247, 127, 0, 0]
0x117f: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1183: movq %r12, %rcx
    bytes:       [76, 137, 225]
0x1186: callq *%rdx
    bytes:       [255, 210]
0x1188: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x118c: testq %rax, %rax
    bytes:       [72, 133, 192]
0x118f: jne 0x1857
    bytes:       [15, 133, 194, 6, 0, 0]
0x1195: movzbq (%rdi, %rsi), %rax
    bytes:       [72, 15, 182, 68, 55, 0]
0x119b: addl $-1, %eax
    bytes:       [131, 192, 255]
0x119e: movb %al, (%rdi, %rsi)
    bytes:       [136, 68, 55, 0]
0x11a2: movabsq $0x7ff7099711c0, %rax
    bytes:       [72, 184, 192, 17, 151, 9, 247, 127, 0, 0]
0x11ac: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x11b0: movq %r12, %rcx
    bytes:       [76, 137, 225]
0x11b3: callq *%rax
    bytes:       [255, 208]
0x11b5: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x11b9: testq %rax, %rax
    bytes:       [72, 133, 192]
0x11bc: jne 0x1857
    bytes:       [15, 133, 149, 6, 0, 0]
0x11c2: addq $-1, %rsi
    bytes:       [72, 131, 198, 255]
0x11c6: cmpq $0, %rsi
    bytes:       [72, 131, 254, 0]
0x11ca: cmovlq 0x6be(%rip), %rsi
    bytes:       [72, 15, 76, 53, 190, 6, 0, 0]
0x11d2: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x11d6: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x11dd: cmoveq 0x6a3(%rip), %rsi
    bytes:       [72, 15, 68, 53, 163, 6, 0, 0]
0x11e5: movq %rdi, %rcx
    bytes:       [72, 137, 249]
0x11e8: addq %rsi, %rcx
    bytes:       [72, 1, 241]
0x11eb: movabsq $0x7ff7099711c0, %rax
    bytes:       [72, 184, 192, 17, 151, 9, 247, 127, 0, 0]
0x11f5: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x11f9: callq *%rax
    bytes:       [255, 208]
0x11fb: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x11ff: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1202: jne 0x1857
    bytes:       [15, 133, 79, 6, 0, 0]
0x1208: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x120e: testb %cl, %cl
    bytes:       [132, 201]
0x1210: je 0x121e
    bytes:       [15, 132, 8, 0, 0, 0]
0x1216: testb %cl, %cl
    bytes:       [132, 201]
0x1218: jne 0x1216
    bytes:       [15, 133, 248, 255, 255, 255]
0x121e: movabsq $0x7ff709971000, %r10
    bytes:       [73, 186, 0, 16, 151, 9, 247, 127, 0, 0]
0x1228: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x122c: callq *%r10
    bytes:       [65, 255, 210]
0x122f: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x1233: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1236: jne 0x1857
    bytes:       [15, 133, 27, 6, 0, 0]
0x123c: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x1242: movabsq $0x7ff709971000, %rdx
    bytes:       [72, 186, 0, 16, 151, 9, 247, 127, 0, 0]
0x124c: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1250: callq *%rdx
    bytes:       [255, 210]
0x1252: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x1256: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1259: jne 0x1857
    bytes:       [15, 133, 248, 5, 0, 0]
0x125f: movzbq (%rdi, %rsi), %rax
    bytes:       [72, 15, 182, 68, 55, 0]
0x1265: testb %al, %al
    bytes:       [132, 192]
0x1267: jne 0x1034
    bytes:       [15, 133, 199, 253, 255, 255]
0x126d: movzbq (%rdi, %rsi), %r8
    bytes:       [76, 15, 182, 68, 55, 0]
0x1273: addl $1, %r8d
    bytes:       [65, 131, 192, 1]
0x1277: movb %r8b, (%rdi, %rsi)
    bytes:       [68, 136, 68, 55, 0]
0x127c: addl $1, %r8d
    bytes:       [65, 131, 192, 1]
0x1280: movb %r8b, (%rdi, %rsi)
    bytes:       [68, 136, 68, 55, 0]
0x1285: addl $1, %r8d
    bytes:       [65, 131, 192, 1]
0x1289: movb %r8b, (%rdi, %rsi)
    bytes:       [68, 136, 68, 55, 0]
0x128e: addl $1, %r8d
    bytes:       [65, 131, 192, 1]
0x1292: movb %r8b, (%rdi, %rsi)
    bytes:       [68, 136, 68, 55, 0]
0x1297: addl $1, %r8d
    bytes:       [65, 131, 192, 1]
0x129b: movb %r8b, (%rdi, %rsi)
    bytes:       [68, 136, 68, 55, 0]
0x12a0: addl $1, %r8d
    bytes:       [65, 131, 192, 1]
0x12a4: movb %r8b, (%rdi, %rsi)
    bytes:       [68, 136, 68, 55, 0]
0x12a9: addl $1, %r8d
    bytes:       [65, 131, 192, 1]
0x12ad: movb %r8b, (%rdi, %rsi)
    bytes:       [68, 136, 68, 55, 0]
0x12b2: addl $1, %r8d
    bytes:       [65, 131, 192, 1]
0x12b6: movb %r8b, (%rdi, %rsi)
    bytes:       [68, 136, 68, 55, 0]
0x12bb: testb %r8b, %r8b
    bytes:       [69, 132, 192]
0x12be: je 0x14e3
    bytes:       [15, 132, 31, 2, 0, 0]
0x12c4: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x12c8: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x12cf: cmoveq 0x5b1(%rip), %rsi
    bytes:       [72, 15, 68, 53, 177, 5, 0, 0]
0x12d7: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x12dd: addl $1, %ecx
    bytes:       [131, 193, 1]
0x12e0: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x12e4: addl $1, %ecx
    bytes:       [131, 193, 1]
0x12e7: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x12eb: addl $1, %ecx
    bytes:       [131, 193, 1]
0x12ee: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x12f2: addl $1, %ecx
    bytes:       [131, 193, 1]
0x12f5: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x12f9: testb %cl, %cl
    bytes:       [132, 201]
0x12fb: je 0x1401
    bytes:       [15, 132, 0, 1, 0, 0]
0x1301: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x1305: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x130c: cmoveq 0x574(%rip), %rsi
    bytes:       [72, 15, 68, 53, 116, 5, 0, 0]
0x1314: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x131a: addl $1, %ecx
    bytes:       [131, 193, 1]
0x131d: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1321: addl $1, %ecx
    bytes:       [131, 193, 1]
0x1324: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1328: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x132c: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x1333: cmoveq 0x54d(%rip), %rsi
    bytes:       [72, 15, 68, 53, 77, 5, 0, 0]
0x133b: movzbq (%rdi, %rsi), %r8
    bytes:       [76, 15, 182, 68, 55, 0]
0x1341: addl $1, %r8d
    bytes:       [65, 131, 192, 1]
0x1345: movb %r8b, (%rdi, %rsi)
    bytes:       [68, 136, 68, 55, 0]
0x134a: addl $1, %r8d
    bytes:       [65, 131, 192, 1]
0x134e: movb %r8b, (%rdi, %rsi)
    bytes:       [68, 136, 68, 55, 0]
0x1353: addl $1, %r8d
    bytes:       [65, 131, 192, 1]
0x1357: movb %r8b, (%rdi, %rsi)
    bytes:       [68, 136, 68, 55, 0]
0x135c: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x1360: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x1367: cmoveq 0x519(%rip), %rsi
    bytes:       [72, 15, 68, 53, 25, 5, 0, 0]
0x136f: movzbq (%rdi, %rsi), %rax
    bytes:       [72, 15, 182, 68, 55, 0]
0x1375: addl $1, %eax
    bytes:       [131, 192, 1]
0x1378: movb %al, (%rdi, %rsi)
    bytes:       [136, 68, 55, 0]
0x137c: addl $1, %eax
    bytes:       [131, 192, 1]
0x137f: movb %al, (%rdi, %rsi)
    bytes:       [136, 68, 55, 0]
0x1383: addl $1, %eax
    bytes:       [131, 192, 1]
0x1386: movb %al, (%rdi, %rsi)
    bytes:       [136, 68, 55, 0]
0x138a: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x138e: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x1395: cmoveq 0x4eb(%rip), %rsi
    bytes:       [72, 15, 68, 53, 235, 4, 0, 0]
0x139d: movzbq (%rdi, %rsi), %r9
    bytes:       [76, 15, 182, 76, 55, 0]
0x13a3: addl $1, %r9d
    bytes:       [65, 131, 193, 1]
0x13a7: movb %r9b, (%rdi, %rsi)
    bytes:       [68, 136, 76, 55, 0]
0x13ac: addq $-1, %rsi
    bytes:       [72, 131, 198, 255]
0x13b0: cmpq $0, %rsi
    bytes:       [72, 131, 254, 0]
0x13b4: cmovlq 0x4d4(%rip), %rsi
    bytes:       [72, 15, 76, 53, 212, 4, 0, 0]
0x13bc: addq $-1, %rsi
    bytes:       [72, 131, 198, 255]
0x13c0: cmpq $0, %rsi
    bytes:       [72, 131, 254, 0]
0x13c4: cmovlq 0x4c4(%rip), %rsi
    bytes:       [72, 15, 76, 53, 196, 4, 0, 0]
0x13cc: addq $-1, %rsi
    bytes:       [72, 131, 198, 255]
0x13d0: cmpq $0, %rsi
    bytes:       [72, 131, 254, 0]
0x13d4: cmovlq 0x4b4(%rip), %rsi
    bytes:       [72, 15, 76, 53, 180, 4, 0, 0]
0x13dc: addq $-1, %rsi
    bytes:       [72, 131, 198, 255]
0x13e0: cmpq $0, %rsi
    bytes:       [72, 131, 254, 0]
0x13e4: cmovlq 0x4a4(%rip), %rsi
    bytes:       [72, 15, 76, 53, 164, 4, 0, 0]
0x13ec: movzbq (%rdi, %rsi), %rax
    bytes:       [72, 15, 182, 68, 55, 0]
0x13f2: addl $-1, %eax
    bytes:       [131, 192, 255]
0x13f5: movb %al, (%rdi, %rsi)
    bytes:       [136, 68, 55, 0]
0x13f9: testb %al, %al
    bytes:       [132, 192]
0x13fb: jne 0x1301
    bytes:       [15, 133, 0, 255, 255, 255]
0x1401: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x1405: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x140c: cmoveq 0x474(%rip), %rsi
    bytes:       [72, 15, 68, 53, 116, 4, 0, 0]
0x1414: movzbq (%rdi, %rsi), %r9
    bytes:       [76, 15, 182, 76, 55, 0]
0x141a: addl $1, %r9d
    bytes:       [65, 131, 193, 1]
0x141e: movb %r9b, (%rdi, %rsi)
    bytes:       [68, 136, 76, 55, 0]
0x1423: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x1427: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x142e: cmoveq 0x452(%rip), %rsi
    bytes:       [72, 15, 68, 53, 82, 4, 0, 0]
0x1436: movzbq (%rdi, %rsi), %r11
    bytes:       [76, 15, 182, 92, 55, 0]
0x143c: addl $1, %r11d
    bytes:       [65, 131, 195, 1]
0x1440: movb %r11b, (%rdi, %rsi)
    bytes:       [68, 136, 92, 55, 0]
0x1445: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x1449: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x1450: cmoveq 0x430(%rip), %rsi
    bytes:       [72, 15, 68, 53, 48, 4, 0, 0]
0x1458: movzbq (%rdi, %rsi), %rax
    bytes:       [72, 15, 182, 68, 55, 0]
0x145e: addl $-1, %eax
    bytes:       [131, 192, 255]
0x1461: movb %al, (%rdi, %rsi)
    bytes:       [136, 68, 55, 0]
0x1465: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x1469: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x1470: cmoveq 0x410(%rip), %rsi
    bytes:       [72, 15, 68, 53, 16, 4, 0, 0]
0x1478: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x147c: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x1483: cmoveq 0x3fd(%rip), %rsi
    bytes:       [72, 15, 68, 53, 253, 3, 0, 0]
0x148b: movzbq (%rdi, %rsi), %rdx
    bytes:       [72, 15, 182, 84, 55, 0]
0x1491: addl $1, %edx
    bytes:       [131, 194, 1]
0x1494: movb %dl, (%rdi, %rsi)
    bytes:       [136, 84, 55, 0]
0x1498: testb %dl, %dl
    bytes:       [132, 210]
0x149a: je 0x14be
    bytes:       [15, 132, 30, 0, 0, 0]
0x14a0: addq $-1, %rsi
    bytes:       [72, 131, 198, 255]
0x14a4: cmpq $0, %rsi
    bytes:       [72, 131, 254, 0]
0x14a8: cmovlq 0x3e0(%rip), %rsi
    bytes:       [72, 15, 76, 53, 224, 3, 0, 0]
0x14b0: movzbq (%rdi, %rsi), %rax
    bytes:       [72, 15, 182, 68, 55, 0]
0x14b6: testb %al, %al
    bytes:       [132, 192]
0x14b8: jne 0x14a0
    bytes:       [15, 133, 226, 255, 255, 255]
0x14be: addq $-1, %rsi
    bytes:       [72, 131, 198, 255]
0x14c2: cmpq $0, %rsi
    bytes:       [72, 131, 254, 0]
0x14c6: cmovlq 0x3c2(%rip), %rsi
    bytes:       [72, 15, 76, 53, 194, 3, 0, 0]
0x14ce: movzbq (%rdi, %rsi), %rax
    bytes:       [72, 15, 182, 68, 55, 0]
0x14d4: addl $-1, %eax
    bytes:       [131, 192, 255]
0x14d7: movb %al, (%rdi, %rsi)
    bytes:       [136, 68, 55, 0]
0x14db: testb %al, %al
    bytes:       [132, 192]
0x14dd: jne 0x12c4
    bytes:       [15, 133, 225, 253, 255, 255]
0x14e3: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x14e7: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x14ee: cmoveq 0x392(%rip), %rsi
    bytes:       [72, 15, 68, 53, 146, 3, 0, 0]
0x14f6: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x14fa: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x1501: cmoveq 0x37f(%rip), %rsi
    bytes:       [72, 15, 68, 53, 127, 3, 0, 0]
0x1509: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x150f: movabsq $0x7ff709971000, %r10
    bytes:       [73, 186, 0, 16, 151, 9, 247, 127, 0, 0]
0x1519: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x151d: callq *%r10
    bytes:       [65, 255, 210]
0x1520: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x1524: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1527: jne 0x1857
    bytes:       [15, 133, 42, 3, 0, 0]
0x152d: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x1531: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x1538: cmoveq 0x348(%rip), %rsi
    bytes:       [72, 15, 68, 53, 72, 3, 0, 0]
0x1540: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x1546: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x1549: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x154d: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x1550: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1554: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x1557: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x155b: movabsq $0x7ff709971000, %r11
    bytes:       [73, 187, 0, 16, 151, 9, 247, 127, 0, 0]
0x1565: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1569: callq *%r11
    bytes:       [65, 255, 211]
0x156c: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x1570: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1573: jne 0x1857
    bytes:       [15, 133, 222, 2, 0, 0]
0x1579: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x157f: addl $1, %ecx
    bytes:       [131, 193, 1]
0x1582: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1586: addl $1, %ecx
    bytes:       [131, 193, 1]
0x1589: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x158d: addl $1, %ecx
    bytes:       [131, 193, 1]
0x1590: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1594: addl $1, %ecx
    bytes:       [131, 193, 1]
0x1597: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x159b: addl $1, %ecx
    bytes:       [131, 193, 1]
0x159e: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x15a2: addl $1, %ecx
    bytes:       [131, 193, 1]
0x15a5: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x15a9: addl $1, %ecx
    bytes:       [131, 193, 1]
0x15ac: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x15b0: movabsq $0x7ff709971000, %rdx
    bytes:       [72, 186, 0, 16, 151, 9, 247, 127, 0, 0]
0x15ba: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x15be: callq *%rdx
    bytes:       [255, 210]
0x15c0: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x15c4: testq %rax, %rax
    bytes:       [72, 133, 192]
0x15c7: jne 0x1857
    bytes:       [15, 133, 138, 2, 0, 0]
0x15cd: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x15d3: movabsq $0x7ff709971000, %rax
    bytes:       [72, 184, 0, 16, 151, 9, 247, 127, 0, 0]
0x15dd: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x15e1: callq *%rax
    bytes:       [255, 208]
0x15e3: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x15e7: testq %rax, %rax
    bytes:       [72, 133, 192]
0x15ea: jne 0x1857
    bytes:       [15, 133, 103, 2, 0, 0]
0x15f0: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x15f6: addl $1, %ecx
    bytes:       [131, 193, 1]
0x15f9: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x15fd: addl $1, %ecx
    bytes:       [131, 193, 1]
0x1600: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1604: addl $1, %ecx
    bytes:       [131, 193, 1]
0x1607: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x160b: movabsq $0x7ff709971000, %rax
    bytes:       [72, 184, 0, 16, 151, 9, 247, 127, 0, 0]
0x1615: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1619: callq *%rax
    bytes:       [255, 208]
0x161b: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x161f: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1622: jne 0x1857
    bytes:       [15, 133, 47, 2, 0, 0]
0x1628: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x162c: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x1633: cmoveq 0x24d(%rip), %rsi
    bytes:       [72, 15, 68, 53, 77, 2, 0, 0]
0x163b: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x163f: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x1646: cmoveq 0x23a(%rip), %rsi
    bytes:       [72, 15, 68, 53, 58, 2, 0, 0]
0x164e: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x1654: movabsq $0x7ff709971000, %r11
    bytes:       [73, 187, 0, 16, 151, 9, 247, 127, 0, 0]
0x165e: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1662: callq *%r11
    bytes:       [65, 255, 211]
0x1665: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x1669: testq %rax, %rax
    bytes:       [72, 133, 192]
0x166c: jne 0x1857
    bytes:       [15, 133, 229, 1, 0, 0]
0x1672: addq $-1, %rsi
    bytes:       [72, 131, 198, 255]
0x1676: cmpq $0, %rsi
    bytes:       [72, 131, 254, 0]
0x167a: cmovlq 0x20e(%rip), %rsi
    bytes:       [72, 15, 76, 53, 14, 2, 0, 0]
0x1682: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x1688: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x168b: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x168f: movabsq $0x7ff709971000, %r10
    bytes:       [73, 186, 0, 16, 151, 9, 247, 127, 0, 0]
0x1699: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x169d: callq *%r10
    bytes:       [65, 255, 210]
0x16a0: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x16a4: testq %rax, %rax
    bytes:       [72, 133, 192]
0x16a7: jne 0x1857
    bytes:       [15, 133, 170, 1, 0, 0]
0x16ad: addq $-1, %rsi
    bytes:       [72, 131, 198, 255]
0x16b1: cmpq $0, %rsi
    bytes:       [72, 131, 254, 0]
0x16b5: cmovlq 0x1d3(%rip), %rsi
    bytes:       [72, 15, 76, 53, 211, 1, 0, 0]
0x16bd: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x16c3: movabsq $0x7ff709971000, %r8
    bytes:       [73, 184, 0, 16, 151, 9, 247, 127, 0, 0]
0x16cd: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x16d1: callq *%r8
    bytes:       [65, 255, 208]
0x16d4: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x16d8: testq %rax, %rax
    bytes:       [72, 133, 192]
0x16db: jne 0x1857
    bytes:       [15, 133, 118, 1, 0, 0]
0x16e1: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x16e7: addl $1, %ecx
    bytes:       [131, 193, 1]
0x16ea: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x16ee: addl $1, %ecx
    bytes:       [131, 193, 1]
0x16f1: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x16f5: addl $1, %ecx
    bytes:       [131, 193, 1]
0x16f8: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x16fc: movabsq $0x7ff709971000, %r8
    bytes:       [73, 184, 0, 16, 151, 9, 247, 127, 0, 0]
0x1706: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x170a: callq *%r8
    bytes:       [65, 255, 208]
0x170d: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x1711: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1714: jne 0x1857
    bytes:       [15, 133, 61, 1, 0, 0]
0x171a: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x1720: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x1723: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1727: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x172a: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x172e: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x1731: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1735: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x1738: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x173c: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x173f: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1743: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x1746: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x174a: movabsq $0x7ff709971000, %r11
    bytes:       [73, 187, 0, 16, 151, 9, 247, 127, 0, 0]
0x1754: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1758: callq *%r11
    bytes:       [65, 255, 211]
0x175b: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x175f: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1762: jne 0x1857
    bytes:       [15, 133, 239, 0, 0, 0]
0x1768: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x176e: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x1771: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1775: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x1778: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x177c: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x177f: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1783: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x1786: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x178a: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x178d: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1791: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x1794: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1798: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x179b: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x179f: addl $-1, %ecx
    bytes:       [131, 193, 255]
0x17a2: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x17a6: movabsq $0x7ff709971000, %rdx
    bytes:       [72, 186, 0, 16, 151, 9, 247, 127, 0, 0]
0x17b0: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x17b4: callq *%rdx
    bytes:       [255, 210]
0x17b6: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x17ba: testq %rax, %rax
    bytes:       [72, 133, 192]
0x17bd: jne 0x1857
    bytes:       [15, 133, 148, 0, 0, 0]
0x17c3: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x17c7: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x17ce: cmoveq 0xb2(%rip), %rsi
    bytes:       [72, 15, 68, 53, 178, 0, 0, 0]
0x17d6: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x17da: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x17e1: cmoveq 0x9f(%rip), %rsi
    bytes:       [72, 15, 68, 53, 159, 0, 0, 0]
0x17e9: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x17ef: addl $1, %ecx
    bytes:       [131, 193, 1]
0x17f2: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x17f6: movabsq $0x7ff709971000, %rdx
    bytes:       [72, 186, 0, 16, 151, 9, 247, 127, 0, 0]
0x1800: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1804: callq *%rdx
    bytes:       [255, 210]
0x1806: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x180a: testq %rax, %rax
    bytes:       [72, 133, 192]
0x180d: jne 0x1857
    bytes:       [15, 133, 68, 0, 0, 0]
0x1813: addq $1, %rsi
    bytes:       [72, 131, 198, 1]
0x1817: cmpq $0x7530, %rsi
    bytes:       [72, 129, 254, 48, 117, 0, 0]
0x181e: cmoveq 0x62(%rip), %rsi
    bytes:       [72, 15, 68, 53, 98, 0, 0, 0]
0x1826: movzbq (%rdi, %rsi), %rcx
    bytes:       [72, 15, 182, 76, 55, 0]
0x182c: addl $1, %ecx
    bytes:       [131, 193, 1]
0x182f: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x1833: addl $1, %ecx
    bytes:       [131, 193, 1]
0x1836: movb %cl, (%rdi, %rsi)
    bytes:       [136, 76, 55, 0]
0x183a: movabsq $0x7ff709971000, %rdx
    bytes:       [72, 186, 0, 16, 151, 9, 247, 127, 0, 0]
0x1844: subq $0x20, %rsp
    bytes:       [72, 131, 236, 32]
0x1848: callq *%rdx
    bytes:       [255, 210]
0x184a: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x184e: testq %rax, %rax
    bytes:       [72, 133, 192]
0x1851: je 0x186e
    bytes:       [15, 132, 23, 0, 0, 0]
0x1857: movq (%rsp), %rsi
    bytes:       [72, 139, 52, 36]
0x185b: movq 8(%rsp), %rdi
    bytes:       [72, 139, 124, 36, 8]
0x1860: movq 0x10(%rsp), %r12
    bytes:       [76, 139, 100, 36, 16]
0x1865: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x1869: movq %rbp, %rsp
    bytes:       [72, 137, 236]
0x186c: popq %rbp
    bytes:       [93]
0x186d: retq 
    bytes:       [195]
0x186e: xorq %rax, %rax
    bytes:       [72, 49, 192]
0x1871: movq (%rsp), %rsi
    bytes:       [72, 139, 52, 36]
0x1875: movq 8(%rsp), %rdi
    bytes:       [72, 139, 124, 36, 8]
0x187a: movq 0x10(%rsp), %r12
    bytes:       [76, 139, 100, 36, 16]
0x187f: addq $0x20, %rsp
    bytes:       [72, 131, 196, 32]
0x1883: movq %rbp, %rsp
    bytes:       [72, 137, 236]
0x1886: popq %rbp
    bytes:       [93]
0x1887: retq 
    bytes:       [195]
0x1888: addb %al, (%rax)
    bytes:       [0, 0]
0x188a: addb %al, (%rax)
    bytes:       [0, 0]
0x188c: addb %al, (%rax)
    bytes:       [0, 0]
0x188e: addb %al, (%rax)
    bytes:       [0, 0]
